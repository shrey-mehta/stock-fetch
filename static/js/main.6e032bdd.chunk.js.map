{"version":3,"sources":["assets/loader.gif","config/Fire.js","components/LoginRegister.js","components/SearchBar/SearchBar.js","components/StockListItem/StockListItem.js","components/StockList/StockList.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Login","props","login","e","preventDefault","auth","signInWithEmailAndPassword","state","email","password","catch","error","setState","fireErrors","message","register","createUserWithEmailAndPassword","getAction","action","formTitle","loginBtn","handleChange","target","name","value","errorNotification","this","className","submitBtn","type","onClick","login_register","id","onChange","Component","SearchBar","StockListItem","stock","symbol","parseInt","price","toFixed","volume","timestamp","StockList","stockItem","stockItems","map","key","Home","logout","signOut","stocks","term","handleClick","bind","url","axios","get","then","res","console","log","data","_","flattenDeep","Array","from","App","user","authListener","onAuthStateChanged","loading","src","Spinner","alt","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6e032bdd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader.34cf5337.gif\";","import firebase from 'firebase';\r\n\r\nconst config ={\r\n    apiKey: \"AIzaSyBWJF62zIPbBXWZ_h5W4D07FxsR7Tgyw78\",\r\n    authDomain: \"stockauth-20eaa.firebaseapp.com\",\r\n    databaseURL: \"https://stockauth-20eaa.firebaseio.com\",\r\n    projectId: \"stockauth-20eaa\",\r\n    storageBucket: \"stockauth-20eaa.appspot.com\",\r\n    messagingSenderId: \"208623172815\",\r\n    appId: \"1:208623172815:web:96092379d42d8d63050bba\"\r\n}\r\nconst fire = firebase.initializeApp(config);\r\nexport default fire;","import React, {Component} from 'react';\r\nimport fire from '../config/Fire';\r\nclass Login extends Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n        email:'',\r\n        password:'',\r\n        fireErrors:'',\r\n        loginBtn: true\r\n    }\r\n}\r\n\r\nlogin = e => {\r\n    e.preventDefault();\r\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password)\r\n    .catch((error) => {\r\n        this.setState({fireErrors: error.message})\r\n    });\r\n}\r\n\r\nregister = e => {\r\n    e.preventDefault();\r\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password)\r\n    .catch((error) => {\r\n        this.setState({fireErrors: error.message})\r\n    });\r\n}\r\n\r\ngetAction = action => {\r\n    if(action === 'reg'){\r\n        this.setState({formTitle: 'Register New User', loginBtn: false, fireErrors: ''});\r\n    }else{\r\n        this.setState({formTitle: 'Login', loginBtn: true, fireErrors: ''});\r\n    }\r\n}\r\n\r\nhandleChange = e => {\r\n    this.setState({[e.target.name]: e.target.value});\r\n}\r\n\r\nrender(){\r\n\r\n    let errorNotification = this.state.fireErrors ? \r\n        ( <div className=\"Error\"> {this.state.fireErrors} </div> ) : null;\r\n\r\n    let submitBtn = this.state.loginBtn ? \r\n        (<input className=\"loginBtn\" type=\"submit\" onClick={this.login} value=\"Enter\" />) : \r\n        (<input className=\"loginBtn\" type=\"submit\" onClick={this.register} value=\"Register\" />);\r\n\r\n    let login_register = this.state.loginBtn ?\r\n        (<button className=\"registerBtn\" onClick={() => this.getAction('reg')}>Register</button>) : \r\n        (<button className=\"registerBtn\" onClick={() => this.getAction('login')}>Login</button>)\r\n\r\n    return(\r\n    \r\n        \r\n        <div className=\"form_block\">\r\n            <h1>Login to check Stocks!</h1>\r\n            <div id=\"title\">{this.state.formTitle}</div>\r\n            <div className=\"body\">\r\n                \r\n                {errorNotification}\r\n                <form>\r\n                    <input type=\"text\" \r\n                    value={this.state.email} \r\n                    onChange={this.handleChange} \r\n                    name=\"email\" />\r\n\r\n                    <input type=\"password\" \r\n                    value={this.state.password} \r\n                    onChange={this.handleChange} \r\n                    name=\"password\" />\r\n\r\n                    {submitBtn}\r\n                </form>\r\n                {login_register}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Login;","import React from 'react';\r\n\r\n\r\nfunction SearchBar(props) {\r\n\r\n    return  (\r\n      <div className=\"SearchBar\">\r\n        <form className=\"SearchBar_Form\">\r\n          <input className=\"SearchBar__Input\"\r\n                 value={ props.value }\r\n                 onChange={ props.onChange } />\r\n          <button className=\"SearchBar__Button\" onClick={ props.onClick }>search</button>\r\n        </form>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","import React from \"react\";\r\n\r\nconst StockListItem = (stock, props) => {\r\n  return (\r\n    <li className=\"StockListItem\">\r\n      <div className=\"StockListItem_Symbol\">\r\n        <span>Stock: </span>\r\n        {stock.symbol}\r\n      </div>\r\n      <div className=\"StockListItem_Price\">\r\n        <span>Price: </span>${parseInt(stock.price).toFixed(2)}\r\n      </div>\r\n      <div className=\"StockListItem_Volume\">\r\n        <span>Vol: </span>\r\n        {stock.volume}\r\n      </div>\r\n      <div className=\"StockListItem_Time\">\r\n        <span>Time: </span>\r\n        {stock.timestamp}\r\n      </div>\r\n    </li>\r\n  );\r\n};\r\nexport default StockListItem;\r\n","import React from 'react';\r\nimport StockListItem from '../StockListItem/StockListItem';\r\n\r\n\r\n\r\nconst StockList = (props) => {\r\n\r\n  const stockItem = props.stockItems.map((stock) => {\r\n    \r\n      return (\r\n        <StockListItem key={ stock.symbol }\r\n                       symbol={ stock.symbol }\r\n                       price={ stock.price }\r\n                       volume={ stock.volume }\r\n                       timestamp={ stock.timestamp } />\r\n      );\r\n  });\r\n\r\n  return (\r\n    <ul className=\"StockList\">\r\n      { stockItem }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default StockList;","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport axios from 'axios';\r\nimport fire from '../config/Fire'\r\n\r\nimport SearchBar from './SearchBar/SearchBar';\r\nimport StockList from './StockList/StockList';\r\n\r\n\r\nclass Home extends Component {\r\n    logout = () => {\r\n        fire.auth().signOut();\r\n    }\r\n    \r\n    \r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      stocks: [],\r\n      term: null,\r\n      value: ''\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(e) {\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  }\r\n\r\n  handleClick(e) {\r\n    if(e) e.preventDefault();\r\n    this.setState({\r\n      value: '',\r\n      term: this.state.value\r\n    });\r\n\r\n    let term = this.state.value;\r\n    const key = 'S9T01LQ9EYR3ZSPP';\r\n    const url = `https://www.alphavantage.co/query?function=BATCH_STOCK_QUOTES&symbols=${term}&apikey=${key}`;\r\n\r\n    axios.get(url)\r\n    .then(res => {\r\n      console.log(res.data);\r\n      let stocks = _.flattenDeep( Array.from(res.data['Stock Quotes']).map((stock) => [{symbol: stock['1. symbol'], price: stock['2. price'], volume: stock['3. volume'], timestamp: stock['4. timestamp']}]) );\r\n      console.log(stocks);\r\n      this.setState((state, props) => {\r\n        return {\r\n          ...state,\r\n        stocks\r\n        }\r\n      })\r\n    })\r\n    .catch(error => console.log(error))\r\n  }\r\n  \r\n  render () {\r\n    let stocks = this.state.stocks;\r\n    const value = this.state.value;\r\n\r\n    return (\r\n        \r\n      <div className=\"App\">\r\n          <div className=\"text\">\r\n        <h1 className=\"App__Title\">Stock Search</h1>\r\n        <SearchBar value={ value }\r\n                   onChange={ this.handleChange }\r\n                   onClick={ this.handleClick }/>\r\n        <StockList stockItems={ this.state.stocks }/>\r\n        <button onClick={this.logout}>Logout</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\nimport fire from './config/Fire';\nimport Login from './components/LoginRegister';\nimport Home from './components/Home';\nimport './App.css';\nimport Spinner from './assets/loader.gif'\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state = {\n      user: null\n    }\n  }\n\n  componentDidMount(){\n    this.authListener();\n  }\n\n  authListener(){\n    fire.auth().onAuthStateChanged((user) => {\n      if(user){\n        this.setState({user});\n      }else{\n        this.setState({user:null});\n      }\n    });\n  }\n\n  render(){\n    if (this.state.loading){\n        return (\n          <div className=\"Spinner\">\n            <img src={Spinner} alt=\"Spinner\" />\n          </div>);\n    }\n    return (\n        <div>\n          {this.state.user ? (<Home />) : (<Login />)}\n        </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}